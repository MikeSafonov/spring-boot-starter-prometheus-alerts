plugins {
    id "java"
    id "jacoco"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "signing"

ext { springBootVersion = "2.1.7.RELEASE" }

group "com.github.mikesafonov"
version "1.0.0"

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    dependencies {
        dependencySet(group:"org.junit.jupiter", version: "5.5.1") {
            entry "junit-jupiter-api"
            entry "junit-jupiter-engine"
            entry "junit-jupiter-params"
        }
        dependencySet(group:"org.junit.platform", version: "1.5.1") {
            entry "junit-platform-engine"
            entry "junit-platform-commons"
        }
    }
}

jar {
    enabled = true
}

configurations {
    compile.exclude module: "spring-boot-starter-logging"
}

dependencies {
    implementation ("org.springframework.boot:spring-boot-starter")
    implementation ("org.springframework.boot:spring-boot-starter-web")
    compileOnly ("org.springframework.boot:spring-boot-configuration-processor")

    implementation("org.slf4j:slf4j-api")

    compileOnly ("org.projectlombok:lombok")
    annotationProcessor ("org.projectlombok:lombok")

    testImplementation ("org.springframework.boot:spring-boot-starter-test")
    testImplementation ("org.junit.jupiter:junit-jupiter:5.5.1")
    testImplementation ("org.mockito:mockito-core")
    testImplementation ("org.assertj:assertj-core:3.13.1")
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

jacoco {
    toolVersion = "0.8.3"
}

test {
    ignoreFailures = true
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId project.group
            artifactId 'spring-boot-starter-prometheus-alerts'
            version project.version
            from components.java

            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }


            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Starter for spring boot application witch catch alerts from Prometheus Alertmanager'
            name 'spring-boot-starter-prometheus-alerts'
            url 'https://github.com/MikeSafonov/spring-boot-starter-prometheus-alerts'
            organization {
                name 'com.github.mikesafonov'
                url 'https://github.com/MikeSafonov'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/MikeSafonov/spring-boot-starter-prometheus-alerts/issues'
            }
            licenses {
                license {
                    name 'MIT'
                    url 'https://github.com/MikeSafonov/spring-boot-starter-prometheus-alerts/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/MikeSafonov/spring-boot-starter-prometheus-alerts'
                connection 'scm:git:git://github.com/MikeSafonov/spring-boot-starter-prometheus-alerts.git'
                developerConnection 'scm:git:ssh://git@github.com:MikeSafonov/spring-boot-starter-prometheus-alerts.git'
            }
            developers {
                developer {
                    name 'Mike Safonov'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
